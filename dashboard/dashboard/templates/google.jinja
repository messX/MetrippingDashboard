<head>
  <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyClgPE17h-uXJA8Ki5Xq5vNDl2bXMJJWxI&libraries=places,geometry"></script>
</head>
<body bgcolor="#f6f6f6" style="font-family: ‘comic sans ms’,‘marker felt-thin’,‘arial’,‘sans-serif’; font-size: 100%; line-height: 1.6; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: none; width: 100% !important; height: 100%; margin: 0; padding: 0;">
<div style="position:relative" ng-app="testApp" ng-controller="dataCtrl">
  <div style="position:absolute;height:60px;width:500px;z-index:10000;margin-left:20%">
    <!--<input type="text" id="inp" style="width:300px;height:30px">&nbsp;<button onClick="getById()">submit</button>&nbsp;<button onClick="removeMarker()">reset</button>-->
    <!--<button onClick="prev(false)">prev</button>&nbsp;<button onClick="prev(true)">next</button>-->
    <select ng-model="selected"
    ng-options="item for item in geoHashes"
    ng-change="clickOptionFun(selected)">
    </select>
    &nbsp;
    <input type="text" ng-model="inputId" />
    <button ng-click="showOnlyId()">Search cluster</button>
  </div>
  <div id="map" style="height:600px;width:100%;margin:auto">

  </div>
</div>
<script type="text/javascript">
  var ctrl = angular.module('testApp', [])
  ctrl.controller('dataCtrl', ['$scope','$q', '$http', function($scope, $q, $http){
    var pointA = new google.maps.LatLng(23.5, 77);
   var myOptions = {
        zoom: 2,
        center: pointA,
    };

    map = new google.maps.Map(document.getElementById('map'), myOptions);
    markerBounds = new google.maps.LatLngBounds();
    clusterColor = {}
    var colors = ['red','blue', 'green', 'black', 'orange', 'magenta', 'brown', 'DarkCyan', 'lime', 'seagreen']
    MarkerList = []
    $scope.cpyList = []

    $scope.copyToClipboard = function(text){
      var dummy = document.createElement("input");
      document.body.appendChild(dummy);
      dummy.setAttribute('value', text);
      dummy.select();
      document.execCommand("copy");
      document.body.removeChild(dummy);
    }

    function addPinToMap(lat_long, map, val){
      if(val === undefined){
        val = "primary_id"

      }
      if(clusterColor[lat_long.parent_id] === undefined){
        clusterColor[lat_long.parent_id] = {'color':colors[Math.round(Math.random()*10)]}
      }
      var color = clusterColor[lat_long.parent_id].color
      var pos = new google.maps.LatLng(parseFloat(lat_long.lng), parseFloat(lat_long.lat));
      var mIcon = {
        path: google.maps.SymbolPath.CIRCLE,
        fillOpacity: 1,
        fillColor: color,
        strokeOpacity: 1,
        strokeWeight: 1,
        strokeColor: color,
        scale: 12
      };
      var markerProps = {
          position: pos,
          title: lat_long.index + "--" + lat_long['parent_id'] + '--' + lat_long['parent_name'],
          map: map,
          icon: mIcon,
          label:{color: '#fff', fontSize: '8px', fontWeight: '600',
            text: String(parseInt(lat_long[val]))}
      }
      var Marker = new google.maps.Marker(markerProps);
      (function (marker) {
                google.maps.event.addListener(marker, "click", function cpyMarker(e){
                if($scope.cpyList.length >= 2){
                  $scope.cpyList = []
                }
                $scope.cpyList.push(Marker);
                if($scope.cpyList.length == 2){
                  var str = $scope.cpyList[0].title + ' to ' + $scope.cpyList[1].title
                  var res = confirm("Do you want to merge "+ str + "?")
                  if(res){
                    //cpy
                    $scope.copyToClipboard($scope.cpyList[0].label.text + '||' + $scope.cpyList[0].title + '||' + $scope.cpyList[1].label.text + "||" + $scope.cpyList[1].title)
                    $scope.cpyList = [];
                  }
                }
                console.log("coy list", $scope.cpyList)
        });
      })(Marker);
      MarkerList.push(Marker)
      markerBounds.extend(pos);
    }



    function removeMarker(){
        _.each(MarkerList, function(marker){
           marker.setMap(null);
        })
        MarkerList = [];
        markerBounds = new google.maps.LatLngBounds();
    }

    function getById(){
      var val = $('#inp').val()
      console.log(val)
      if(result[0][val] === undefined){
        alert('invalid key')
      }
      else{
        reinitMap(val)
      }
    }

    $scope.showOnlyId = function(){
      var inputId = $scope.inputId;
      console.log("id is -->", $scope.inputId);
      var res = [];
      _.each(result, function(dt){
        if(dt['parent_id'] == inputId){
          res.push(dt)
        }
      })
      if(res.length > 0)
        $scope.iniBasic(res);
      else{
        alert("invalid id ... ")
      }
      $scope.inputId = null;
    }

    $scope.geoHashes = []
    $scope.getGeoHashList = function(){
      _.each(result, function(dt){
        if(!_.contains($scope.geoHashes, dt['geohash'])){
          $scope.geoHashes.push(dt['geohash'])
        }
      })
      $scope.geoHashes = _.sortBy($scope.geoHashes)
    }

    $scope.clickOptionFun = function(index){
      $scope.initByHash(index)
    }

    $scope.iniBasic = function(res){
      removeMarker()
      _.each(res, function(data){
        addPinToMap(data, map)
      })
      map.fitBounds(markerBounds)
    }

    $scope.initByHash = function(hsh){
      removeMarker()
      var res = _.filter(result, function(dt){
        return dt['geohash'] == hsh
      })
      _.each(res, function(data){
        addPinToMap(data, map)
      })
      map.fitBounds(markerBounds)
    }

    function handleData(response){
      final_result = response.json
      result = final_result
      $scope.getGeoHashList();
      $scope.initByHash($scope.geoHashes[0])
      if(!$scope.$$phase)
         $scope.$apply();
    }
    $.get('/static/cluster-plots-all.json', handleData)
    //var allData = {"json":[{"index": "Kentisbeare", "parent_id": 1498296, "primary_id": 1498296, "lat": "-3.32502", "lng": "50.86515"}, {"index": "Sampford Peverell", "parent_id": 1498296, "primary_id": 8273, "lat": "-3.38081", "lng": "50.91945"}, {"index": "Nerokhori|Nerokhorion|Nerochori", "parent_id": 1523720, "primary_id": 1523720, "lat": "24.13712", "lng": "35.40153"}, {"index": "Duga Resa|Duga Rosa", "parent_id": 1473979, "primary_id": 1473979, "lat": "15.48833", "lng": "45.42861"}, {"index": "Pointe d'Esny", "parent_id": 2239, "primary_id": 1506562, "lat": "57.72693", "lng": "-20.43035"}, {"index": "Poste Lafayette", "parent_id": 2239, "primary_id": 1508108, "lat": "57.75212", "lng": "-20.13823"}, {"index": "Mahebourg", "parent_id": 2239, "primary_id": 146576, "lat": "57.7", "lng": "-20.40806"}, {"index": "Chemin Grenier", "parent_id": 2239, "primary_id": 146578, "lat": "57.46556", "lng": "-20.48722"}]}
    //handleData(allData)
  }]);
</script>


</body>
